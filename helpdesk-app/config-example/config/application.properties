#
# Application settings
#

# Properties injected from Maven
# See: https://docs.spring.io/spring-boot/docs/current/reference/html/howto.html#howto-automatic-expansion-maven
application.name=@project.name@
application.version=@project.version@

spring.main.banner-mode = off

#
# Server
#

server.address=0.0.0.0
server.port=9080

#
# Profiles
#

spring.profiles.active = production

#
# Logging
#

logging.config = classpath:log4j2-testing.xml

#
# Session
#

spring.session.store-type = JDBC
spring.session.timeout = 7200

spring.session.jdbc.initialize-schema = NEVER

server.servlet.session.timeout = 7200

server.servlet.session.cookie.domain =
server.servlet.session.cookie.http-only = true
server.servlet.session.cookie.max-age = 7200
server.servlet.session.cookie.name = sid
server.servlet.session.cookie.path = /
server.servlet.session.cookie.secure = false

#
# JPA
#

# See: https://stackoverflow.com/questions/30549489/what-is-this-spring-jpa-open-in-view-true-property-in-spring-boot
spring.jpa.open-in-view = false

#
# JPA hibernate
#

spring.jpa.hibernate.ddl-auto = validate

spring.jpa.properties.hibernate.dialect=org.hibernate.spatial.dialect.postgis.PostgisDialect
spring.jpa.properties.hibernate.hbm2ddl.auto = validate

# Fix PostgreSQL JPA Error (Method org.postgresql.jdbc.PgConnection.createClob() is not yet implemented)
# https://docs.jboss.org/hibernate/orm/5.4/userguide/html_single/Hibernate_User_Guide.html#_jdbc_related_options
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation = false

#
# Auditing, health, and metrics
#

# Enable
management.endpoints.enabled-by-default=false
management.endpoint.health.enabled=true
management.endpoint.info.enabled=true

# Expose
management.endpoints.jmx.exposure.exclude=*
management.endpoints.web.exposure.include=info, health

# Configure
management.endpoint.health.show-details=when-authorized
management.endpoint.health.show-components=when-authorized

management.info.git.mode=full

#
# Serialization configuration
#

spring.jackson.deserialization.READ_DATE_TIMESTAMPS_AS_NANOSECONDS=false
spring.jackson.serialization.WRITE_DATE_TIMESTAMPS_AS_NANOSECONDS=false

#
# File uploading configuration
#

spring.http.multipart.max-file-size =20Mb
spring.http.multipart.max-request-size=20Mb

#
# Security
#

opertus-mundi.default-admin.username=
opertus-mundi.default-admin.password=
opertus-mundi.default-admin.firstname=
opertus-mundi.default-admin.lastname=

#
# Spring Cloud Feign clients
#

# Catalogue service
opertusmundi.feign.catalogue.name=catalogue
opertusmundi.feign.catalogue.url=

# BPM server
opertusmundi.feign.bpm-server.name=bpm-server
opertusmundi.feign.bpm-server.url=
opertusmundi.feign.bpm-server.basic-auth.username=
opertusmundi.feign.bpm-server.basic-auth.password=

# Ingest service
opertusmundi.feign.ingest.name=ingest-service
opertusmundi.feign.ingest.url=

# Transform service
opertusmundi.feign.transform.name=transform-service
opertusmundi.feign.transform.url=

# Data Profiler service
opertusmundi.feign.data-profiler.name=data-profiler-service
opertusmundi.feign.data-profiler.url=

#
# File system
#

opertusmundi.file-system.temp-dir=
opertusmundi.file-system.data-dir=
opertusmundi.file-system.asset-dir=
